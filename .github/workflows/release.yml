name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v1.1.0, etc.

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: tcp-check
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            binary_name: tcp-check
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: tcp-check.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: tcp-check
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: tcp-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install musl tools (for Linux musl target)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        shell: bash
        run: |
          # Create the archive name
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            archive_name="tcp-check-${{ github.ref_name }}-${{ matrix.target }}.zip"
            # Copy binary and create zip
            cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} .
            7z a $archive_name ${{ matrix.binary_name }}
          else
            archive_name="tcp-check-${{ github.ref_name }}-${{ matrix.target }}.tar.gz"
            # Copy binary and create tar.gz
            cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} .
            tar -czf $archive_name ${{ matrix.binary_name }}
          fi
          echo "ARCHIVE_NAME=$archive_name" >> $GITHUB_ENV

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ARCHIVE_NAME }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
